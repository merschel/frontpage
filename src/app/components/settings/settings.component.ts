import { YesNoDialogInput, YesNoDialogComponent } from './../yes-no-dialog/yes-no-dialog.component'
import { Group } from './../../model/group'
import { GroupStorageService } from './../../services/group-storage.service'
import { Component, OnInit, ViewChild } from '@angular/core'
import { MatTable } from '@angular/material'
import { MatDialog } from '@angular/material'

@Component({
  selector: 'app-settings',
  templateUrl: './settings.component.html',
  styleUrls: ['./settings.component.css']
})
export class SettingsComponent implements OnInit {

  //////////////////////////////////////////////
  //////////////////////////////////////////////
          //   Input Variables    //
  //////////////////////////////////////////////
  //////////////////////////////////////////////

  //////////////////////////////////////////////
  //////////////////////////////////////////////
  //   Output Variables    //
  //////////////////////////////////////////////
  //////////////////////////////////////////////

  //////////////////////////////////////////////
  //////////////////////////////////////////////
  //   Member Variables    //
  //////////////////////////////////////////////
  //////////////////////////////////////////////

  @ViewChild(MatTable) mTable: MatTable<any>

  mDisplayedColumns: string[] = ['name', 'numberOfColumns', 'action']

  mNewName: string
  mNewNumberOfColumns: number

  //////////////////////////////////////////////
  //////////////////////////////////////////////
            //    Constructor    //
  //////////////////////////////////////////////
  //////////////////////////////////////////////

  constructor( public groupStorage: GroupStorageService,
               private dialog: MatDialog ) { }

  //////////////////////////////////////////////
  //////////////////////////////////////////////
          //   Life Cycle Functions     //
  //////////////////////////////////////////////
  //////////////////////////////////////////////

  ngOnInit() {

    this.default()

  }

  //////////////////////////////////////////////
  //////////////////////////////////////////////
          //    Public Functions    //
  //////////////////////////////////////////////
  //////////////////////////////////////////////

  onAdd() {

    const group: Group = {
      name: this.mNewName,
      settings: {
        numberOfColumns: this.mNewNumberOfColumns,
      },
      tiles: []
    }

    this.groupStorage.add(group)

    this.refreshTable()

  }

  onRemove( group: Group ) {

    const yesNoDialogInput: YesNoDialogInput = {

      question: 'Soll die Gruppe ' + group.name + ' gelöscht werden?',
      title: 'Löschen'

    }

    const dialogRef = this.dialog.open( YesNoDialogComponent, { data: yesNoDialogInput } )

    dialogRef.afterClosed().subscribe( result => {

      if ( result ) {

        this.groupStorage.remove( group )

        this.refreshTable()

      }

    })

  }

  onChange() {

    this.groupStorage.onChange()

  }

  //////////////////////////////////////////////
  //////////////////////////////////////////////
           //   Private Functions    //
  //////////////////////////////////////////////
  //////////////////////////////////////////////

  private refreshTable() {

    this.mTable.renderRows()

    this.default()

  }

  private default() {

    this.mNewName = ''
    this.mNewNumberOfColumns = 5

  }

  //////////////////////////////////////////////
  //////////////////////////////////////////////
           //   Getter and Setter    //
  //////////////////////////////////////////////
  //////////////////////////////////////////////

}
